package com.wellsfargo.fsd.coronakit.controller;



import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.wellsfargo.fsd.coronakit.entity.Loan;
import com.wellsfargo.fsd.coronakit.entity.ProductMaster;
import com.wellsfargo.fsd.coronakit.exception.CoronaException;
import com.wellsfargo.fsd.coronakit.exception.LoanException;
import com.wellsfargo.fsd.coronakit.service.ProductService;



@Controller
@RequestMapping("/admin")
public class AdminController {

	@Autowired
	ProductService productService;
	
	@GetMapping("/home")
	public String doDisplayLoans() {
		return "admin-home";
	}
	
	@GetMapping("/product-entry")
	public ModelAndView productEntry() {
		ModelAndView mv = new ModelAndView("add-new-item","product",new ProductMaster());
		mv.addObject("isNew",true);
		return mv;
	}
	
	

	@PostMapping("/product-save")
	public ModelAndView productSave(@ModelAttribute("ProductMaster") @Valid ProductMaster productMaster,BindingResult result) throws  CoronaException {
		ModelAndView mv = null;
		
		if(result.hasErrors()) {
			mv = new ModelAndView("show-all-item-admin","productMaster",productMaster);
			mv.addObject("isNew",true);
		}else {
			productService.addNewProduct(productMaster);
			mv = new ModelAndView("index","msg","product is saved successfully");
		}
		
		return mv;
	}

	@GetMapping("/product-list")
		public ModelAndView productList() throws CoronaException {
			return new ModelAndView("show-all-item-admin","productMasters", productService.getAllProducts());
		}
	
	@GetMapping("/product-delete/{productId}")
	public String productDelete(@PathVariable("productId") int productId) {
		return null;
	}
	
}
